#!/bin/bash
#
# must run as root
# pwd must be the ElasticStackSetup directory
#
#

start_time=`date +%s`
CYAN='\033[1;36m'
NC='\033[0m'

# Dependencies
echo -e "${CYAN}Installing Dependencies${NC}"
apt-get install openjdk-11-jdk -y
apt-get install wget -y
apt-get install apt-transport-https -y
apt-get install curl -y
apt-get install gnupg2 -y

curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" >> /etc/apt/sources.list.d/elastic-7.x.list
apt update
systemctl daemon-reload # reload systemd files

#########################################
#
# ELASTICSEARCH
#
echo -e "${CYAN}Starting elasticsearch setup...${NC}"

apt-get install elasticsearch -y
cp ./config-files/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml

#
# SECURITY NOT CONFIGURED YET
#
# /usr/share/elasticsearch/bin/elasticsearch-certutil ca
# enter required
# /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12
# enter required
# Certificates are moved under config/certs directory
#mkdir /usr/share/elasticsearch/config
#mkdir /usr/share/elasticsearch/config/certs
#mv ./elastic-certificates.p12 /usr/share/elasticsearch/config/certs
#mv ./elastic-stack-ca.p12 /usr/share/elasticsearch/config/certs


systemctl enable elasticsearch # Enable Service

#########################################
#
# KIBANA
#
echo -e "${CYAN}Starting kibana setup...${NC}"

apt-get install kibana -y
cp ./config-files/kibana.yml /etc/kibana/kibana.yml
systemctl enable kibana # Enable Service

#########################################

#
# LOGSTASH
#
echo -e "${CYAN}Starting logstash setup...${NC}"

apt-get install logstash -y

# SSL cert&key
sudo mkdir -p /etc/pki/tls/certs
sudo mkdir /etc/pki/tls/private
sudo openssl req -config /etc/ssl/openssl.cnf -x509 -days 3650 -batch -nodes -newkey rsa:2048 -keyout /etc/pki/tls/private/logstash-forwarder.key -out /etc/pki/tls/certs/logstash-forwarder.crt

# Plugins
/usr/share/logstash/bin/logstash-plugin install logstash-input-beats
/usr/share/logstash/bin/logstash-plugin install logstash-output-elasticsearch

# Starter Pipeline
cp ./config-files/beats_to_elasticsearch.conf /etc/logstash/conf.d/beats_to_elasticsearch.conf

# Logstash can take a very long time to shut down. This kills the process after 3 minutes of shutting down
sed -i 's/.TimeoutStopSec.*/TimeoutStopSec=180/' /etc/systemd/system/logstash.service

systemctl enable logstash # Enable Service

#########################################

#
# FILEBEAT
#
echo -e "${CYAN}Starting filebeat setup...${NC}"

apt-get install filebeat -y
cp ./config-files/filebeat.yml /etc/filebeat/filebeat.yml

filebeat modules enable system
filebeat modules enable logstash
filebeat modules enable kibana
filebeat setup --pipelines --modules system
filebeat setup — index-management -E output.logstash.enabled=false -E ‘output.elasticsearch.hosts=[“localhost:9200”]’

systemctl enable filebeat # Enable Service

#########################################
#
# APM SERVER
#
#echo -e "${CYAN}Starting APM server setup...${NC}"

#apt-get install apm-server -y
#cp ./config-files/apm-server.yml /etc/apm-server/apm-server.yml
#systemctl enable apm-server # Enable Service

#########################################


echo -e "${CYAN}Installations/Configurations Complete. Starting services${NC}"

echo -e "${CYAN}Starting elasticsearch...${NC}"
systemctl start elasticsearch.service

echo -e "${CYAN}Starting kibana...${NC}"
systemctl start kibana.service

echo -e "${CYAN}Starting logstash...${NC}"
systemctl start logstash.service

echo -e "${CYAN}Starting filebeat...${NC}"
systemctl start filebeat.service

#echo -e "${CYAN}Starting APM server...${NC}"
#systemctl start apm-server.service

# Display Service Status
bash ./status_Elastic_services.bash

# Runtime Stats
end_time=`date +%s`
runtime=$((end_time-start_time))
echo -e "${CYAN}Runtime: ${runtime} seconds${NC}"
